# первое уравнение x = 4  Результат: 2.6457513110645903
# второе уравнение x = 4  Результат: 2.6457513110645903

# первое уравнение x = 5  Результат: 2.0
# второе уравнение x = 5  Результат: 2.0

# первое уравнение x = 6  Результат: 1.7320508075688772
# второе уравнение x = 6  Результат: 1.7320508075688772

# первое уравнение x = 7  Результат: 1.5811388300841898
# второе уравнение x = 7  Результат: 1.5811388300841898

# первое уравнение x = 8  Результат: 1.4832396974191329
# второе уравнение x = 8  Результат: 1.4832396974191324


from math import sqrt  # Импортируем функцию sqrt из модуля math для вычисления квадратного корня

def func1():
    # Функция для вычисления первого уравнения
    print("Введите значение переменной x для первого уравнения.")
    while True:  # Бесконечный цикл для получения корректного ввода
        input_values = input("Введенное значение: ")  # Запрашиваем ввод от пользователя
        if input_values.strip() == "":  # Проверяем, не пустой ли ввод
            print("Пожалуйста, введите значение.")  # Сообщаем пользователю об ошибке
            continue  # Возвращаемся к началу цикла
        
        try:
            x = float(input_values)  # Преобразуем введенное значение в число с плавающей точкой
            # Вычисляем числитель первого уравнения
            numerator = x**2 + 2*x - 3 + (x + 1) * (sqrt(x**2 - 9))
            # Вычисляем знаменатель первого уравнения
            denominator = x**2 - 2*x - 3 + (x - 1) * (sqrt(x**2 - 9))
            
            if denominator == 0:  # Проверяем, не равен ли знаменатель нулю
                print("Деление на ноль. Переход ко второму уравнению.")
                return None  # Если да, возвращаем None
            
            z1 = numerator / denominator  # Вычисляем результат первого уравнения
            return z1  # Возвращаем результат
        except ValueError:  # Обрабатываем исключение при некорректном вводе
            print("Некорректный ввод. Введите число.")

def func2():
    # Функция для вычисления второго уравнения
    print("Введите значение переменной x для второго уравнения.")
    while True:  # Бесконечный цикл для получения корректного ввода
        input_values1 = input("Введенное значение: ")  # Запрашиваем ввод от пользователя
        if input_values1.strip() == "":  # Проверяем, не пустой ли ввод
            print("Пожалуйста, введите значение.")  # Сообщаем пользователю об ошибке
            continue  # Возвращаемся к началу цикла
        
        try:
            x = float(input_values1)  # Преобразуем введенное значение в число с плавающей точкой
            if x < 3:  # Проверяем, что x больше или равен 3 для вычисления корня
                print("Значение x должно быть больше или равно 3 для вычисления корня.")
                continue
            
            # Вычисляем числитель второго уравнения
            numerator1 = sqrt(x + 3)
            denominator1 = sqrt(x - 3)
            
            if denominator1 == 0:  # Проверяем, не равен ли знаменатель нулю
                print("Деление на ноль. До свидания.")
                return None
            
            z2 = numerator1 / denominator1  # Вычисляем результат второго уравнения
            return z2  # Возвращаем результат
        except ValueError:  # Обрабатываем исключение при некорректном вводе
            print("Некорректный ввод. Введите число.")

# Основной цикл программы
result = func1()  # Вызываем первую функцию и сохраняем результат
if result is not None:  # Проверяем, не является ли результат None
    print(f"Результат первого уравнения: {result}")  # Выводим результат первого уравнения

result1 = func2()  # Вызываем вторую функцию и сохраняем результат
if result1 is not None:  # Проверяем, не является ли результат None
    print(f"Результат второго уравнения: {result1}")  # Выводим результат второго уравнения
else:
    print("Завершение программы.")  # Если результат None, сообщаем о завершении программы
